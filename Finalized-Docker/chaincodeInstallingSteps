#package the chaincode
#make sure you are in basic network sir
export CORE_PEER_TLS_ENABLED=true
export ORDERER_CA=${PWD}/artifacts/channel/crypto-config/ordererOrganizations/excise.com/orderers/orderer.excise.com/msp/tlscacerts/tlsca.excise.com-cert.pem
export PEER1_Excise_CA=${PWD}/artifacts/channel/crypto-config/peerOrganizations/excise.com/peers/peer1.excise.com/tls/ca.crt
export PEER1_Fbr_CA=${PWD}/artifacts/channel/crypto-config/peerOrganizations/fbr.com/peers/peer1.fbr.com/tls/ca.crt
export PEER1_Manufacturer_CA=${PWD}/artifacts/channel/crypto-config/peerOrganizations/manufacturer.com/peers/peer1.manufacturer.com/tls/ca.crt
export FABRIC_CFG_PATH=${PWD}/artifacts/channel/config/

export CHANNEL_NAME=automobilechannel
export PRIVATE_DATA_CONFIG=${PWD}/artifacts/private-data/collections_config.json
#major setting for all 

setGlobalsForOrderer() {
    export CORE_PEER_LOCALMSPID="OrdererMSP"
    export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/artifacts/channel/crypto-config/ordererOrganizations/excise.com/orderers/orderer.excise.com/msp/tlscacerts/tlsca.excise.com-cert.pem
    export CORE_PEER_MSPCONFIGPATH=${PWD}/artifacts/channel/crypto-config/ordererOrganizations/excise.com/users/Admin@excise.com/msp
}

setGlobalsForPeer1Excise(){
    export CORE_PEER_LOCALMSPID="ExciseMSP"
    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER1_Excise_CA
    export CORE_PEER_MSPCONFIGPATH=${PWD}/artifacts/channel/crypto-config/peerOrganizations/excise.com/users/Admin@excise.com/msp
    export CORE_PEER_ADDRESS=localhost:7051
}

setGlobalsForPeer1Fbr(){
    export CORE_PEER_LOCALMSPID="FbrMSP"
    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER1_Fbr_CA
    export CORE_PEER_MSPCONFIGPATH=${PWD}/artifacts/channel/crypto-config/peerOrganizations/fbr.com/users/Admin@fbr.com/msp
    export CORE_PEER_ADDRESS=localhost:10051
    
}
setGlobalsForPeer1Manufacturer(){
    export CORE_PEER_LOCALMSPID="ManufacturerMSP"
    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER1_Manufacturer_CA
    export CORE_PEER_MSPCONFIGPATH=${PWD}/artifacts/channel/crypto-config/peerOrganizations/manufacturer.com/users/Admin@manufacturer.com/msp
    export CORE_PEER_ADDRESS=localhost:20051
}
#major environment variables settings


export CC_NAME=gocc
export CC_VERSION=1.0
export CC_LABEL="$CC_NAME.$CC_VERSION-1.0"
export CC_PACKAGE_FILE=$HOME/packages/$CC_LABEL.tar.gz


mkdir -p $HOME/packages

peer lifecycle chaincode package $CC_PACKAGE_FILE --label $CC_LABEL -p supplychain

# <!-- check package folder -->
ls -la $CC_PACKAGE_FILE

# setGlobalsForPeer1Excise
peer lifecycle chaincode install $CC_PACKAGE_FILE


1. Get the package ID
peer lifecycle chaincode queryinstalled
CC_PACKAGE_ID=gocc.1.0-1.0:4dd16a9aea9bee85dc25167a5ddc45f7f840a1976c6f037f0933c32297cda7f9

#approve for excise
setGlobalsForPeer1Excise
setGlobalsForPeer1Manufacturer
setGlobalsForPeer1Fbr

 peer lifecycle chaincode approveformyorg -o localhost:7050  --ordererTLSHostnameOverride orderer.excise.com --tls  --cafile $ORDERER_CA --channelID $CHANNEL_NAME --name gocc --version 1.0  --init-required --package-id ${CC_PACKAGE_ID}   --sequence 1 --waitForEvent
# peer lifecycle chaincode approveformyorg -n gocc -v 1.0 -C  automobilechannel --sequence 1  --init-required --package-id $CC_PACKAGE_ID -o localhost:7050 --waitForEvent 


Check Commit Readiness
# peer   lifecycle   chaincode   checkcommitreadiness -n gocc -v 1.0 -C  automobilechannel --sequence 1 --init-required 
peer lifecycle chaincode checkcommitreadiness \
        --channelID automobilechannel --name gocc --version 1.0 \
        --sequence 1 --output json --init-required


#done here
4. Commit the chaincode
# peer lifecycle chaincode commit -n gocc -v 1.0 -C automobilechannel --sequence 1 --init-required  --waitForEvent 

  peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.excise.com \
        --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA \
        --channelID automobilechannel --name gocc \
        --peerAddresses localhost:7051 --tlsRootCertFiles $PEER1_Excise_CA \
        --version 1.0 --sequence 1 --init-required
        # --peerAddresses localhost:10051 --tlsRootCertFiles $PEER1_Fbr_CA \

5. Check committed
peer lifecycle chaincode querycommitted -n gocc  -C automobilechannel
#  peer lifecycle chaincode querycommitted --channelID $CHANNEL_NAME --name ${CC_NAME}



Setup the environment variable
export CORE_CHAINCODE_ID_NAME=gocc:1.0
export CORE_CHAINCODE_LOGGING_LEVEL=debug
export CORE_PEER_ADDRESS="peer1.excise.com:7051"


# Invoke and query
 peer chaincode invoke -o localhost:7050 \
        --ordererTLSHostnameOverride orderer.excise.com \
        --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA \
        -C automobilechannel -n gocc \
        --peerAddresses localhost:7051 --tlsRootCertFiles $PEER1_Excise_CA \
        --isInit -c '{"Args":["init","Pkr","10000000","Pakistani Rupee!!!","MAdil"]}'
        # --peerAddresses localhost:10051 --tlsRootCertFiles $PEER1_Fbr_CA \

# peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.excise.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA --isInit  -n gocc  -C automobilechannel -c '{"Args":["init","Pkr","10000000","Pakistani Rupee!!!","MAdil"]}'
#done upto this
peer chaincode query  -C automobilechannel -n gocc -c '{"Args":["balanceOf","3520299610969"]}'
peer chaincode invoke -C automobilechannel -n gocc  -c '{"Args":["transfer", "3520299610969", "1234", "100","Dar"]}'



use below using above amendments

uery the balance for 'Madil'
 set-chain-env.sh         -q   '{"Args":["balanceOf","3520299610969"]}'
 chain.sh query

Invoke
======
Transfer 100 tokens from 'MAdil' to 'Dar'
  set-chain-env.sh         -i   '{"Args":["transfer", "3520299610969", "1234", "100","Dar"]}'
  chain.sh  invoke

   set-chain-env.sh         -q   '{"Args":["balanceOf","1234"]}'
 chain.sh query

 set-chain-env.sh         -q   '{"Args":["balanceOf","6666"]}'
 chain.sh query
 
 set-chain-env.sh         -i   '{"Args":["Manufacture", "3520299610969", "23B8", "A7655","Honda","2022","Car","Civic","7777","10000","12000","2/11/2022"]}'
  chain.sh  invoke

   set-chain-env.sh         -i   '{"Args":["Manufacture", "3520299610969", "23Be8", "A76e55","Honda","2022","Car","City","7777","10000","12000","2/11/2022"]}'
  chain.sh  invoke

  set-chain-env.sh  -q '{"Args": ["GetVehiclesByCNIC", "7777"]}'
chain.sh query
Query
=====
Check the balance for 'Madil' & 'Dar'
 set-chain-env.sh         -q   '{"Args":["balanceOf","3520299610969"]}'
 chain.sh query
 set-chain-env.sh         -q   '{"Args":["balanceOf","6666"]}'
 chain.sh query

Query 
====
get the vehicle by chassis no ,engine no,company name
by chassis no
<!-- set-chain-env.sh         -q   '{"Args":["getStateRangeOnKey","23B8"]}'
 chain.sh query
 by engine no
 set-chain-env.sh         -q   '{"Args":["getStateRangeOnKey","A7655"]}'
 chain.sh query

 by company name
  set-chain-env.sh         -q   '{"Args":["getStateRangeOnKey","Honda"]}'
 chain.sh query -->
  by combining two or more
   set-chain-env.sh         -q   '{"Args":["getStateRangeOnKey","A7655","23B8","Honda"]}'
 chain.sh query




<!-- set-chain-env.sh  -q '{"Args": ["GetVehicleByVin", "100"]}'
chain.sh query -->

Transfer Ownership
 from ,to ,car composite key which is chassisNo~engineNo~companyName

chain.sh invoke
set-chain-env.sh  -i '{"Args": ["TransferOwnership", "7777","1234","A7655","23B8","Honda","2019-02-01"]}'
chain.sh invoke
